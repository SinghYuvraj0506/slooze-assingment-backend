generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id            String          @id @default(uuid())
  name          String
  email         String          @unique
  password      String
  role          Role
  country       Country
  status        Int             @default(1) // 1 = active, 0 = disabled
  orders        Order[]
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @default(now()) @updatedAt
  PaymentMethod PaymentMethod[]
}

model Restaurant {
  id        String     @id @default(uuid())
  name      String
  country   Country
  menuItems MenuItem[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  status Int @default(1) // 1 = active, 0 = disabled
}

model MenuItem {
  id           String      @id @default(uuid())
  name         String
  price        Float
  restaurantId String
  restaurant   Restaurant  @relation(fields: [restaurantId], references: [id])
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  OrderItem    OrderItem[]

  status Int @default(1) // 1 = active, 0 = disabled
}

model Order {
  id              String         @id @default(uuid())
  userId          String
  user            User           @relation(fields: [userId], references: [id])
  items           OrderItem[]
  status          OrderStatus    @default(PENDING)
  total           Float
  paymentMethodId String?
  paymentMethod   PaymentMethod? @relation(fields: [paymentMethodId], references: [id])
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
}

model OrderItem {
  id         String   @id @default(uuid())
  orderId    String
  menuItemId String
  quantity   Int
  order      Order    @relation(fields: [orderId], references: [id])
  menuItem   MenuItem @relation(fields: [menuItemId], references: [id])
}

model PaymentMethod {
  id        String  @id @default(uuid())
  userId    String
  type      String
  cardLast4 String
  isDefault Boolean @default(false)
  user      User    @relation(fields: [userId], references: [id])
  Order     Order[]
}

enum Role {
  ADMIN
  MANAGER
  MEMBER
}

enum Country {
  INDIA
  AMERICA
}

enum OrderStatus {
  PENDING
  PAID
  CANCELLED
}
